{"version":3,"sources":["components/FileUpload.js","components/EdiTable.js","components/SelectionTransfer.js","components/Steps.js","Layout.js","App.js","reportWebVitals.js","index.js"],"names":["Dragger","Upload","FileUpload","useState","setFileData","props","name","multiple","action","onChange","info","status","file","console","log","fileList","reader","FileReader","onload","e","target","result","localStorage","setItem","readAsText","originFileObj","message","success","error","onDrop","dataTransfer","files","className","InboxOutlined","originData","csvColumns","getItem","split","i","push","key","toString","age","address","EditableCell","editing","dataIndex","title","inputType","children","record","index","restProps","inputNode","Item","style","margin","rules","required","EditableTable","Form","useForm","form","data","setData","editingKey","setEditingKey","isEditing","cancel","save","a","validateFields","row","newData","findIndex","item","splice","columns","forEach","header","width","editable","render","_","href","onClick","marginRight","onConfirm","Link","disabled","setFieldsValue","edit","mergedColumns","map","col","onCell","component","components","body","cell","bordered","dataSource","rowClassName","pagination","mockData","length","description","oriTargetKeys","filter","SelectionTransfer","state","targetKeys","selectedKeys","handleChange","nextTargetKeys","direction","moveKeys","setState","handleSelectChange","sourceSelectedKeys","targetSelectedKeys","handleScroll","this","titles","onSelectChange","onScroll","oneWay","marginBottom","justifyContent","marginTop","listStyle","height","React","Component","Step","Steps","steps","content","StepsFlow","current","setCurrent","type","Header","Layout","Content","Footer","Sider","AppLayout","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","theme","mode","defaultSelectedKeys","icon","UserOutlined","padding","minHeight","textAlign","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b97e044a.chunk.js","sourcesContent":["import { Upload, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { useState } from 'react';\n\nconst { Dragger } = Upload;\n\nconst FileUpload = () => {\n    const [fileData, setFileData] = useState(null);\n    const props = {\n        name: 'file',\n        multiple: true,\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        onChange(info) {\n            const { status } = info.file;\n            if (status !== 'uploading') {\n                console.log(info.file, info.fileList);\n                let reader = new FileReader();\n                reader.onload = (e) => {\n                    console.log(e.target.result);\n                    setFileData(e.target.result);\n                    localStorage.setItem(\"fileData\", e.target.result);\n                }\n                reader.readAsText(info.file.originFileObj);\n            }\n            if (status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully.`);\n            } else if (status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        },\n        onDrop(e) {\n            console.log('Dropped files', e.dataTransfer.files);\n        },\n    };\n\n    return (\n        <Dragger {...props}>\n            <p className=\"ant-upload-drag-icon\">\n                <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n            <p className=\"ant-upload-hint\">\n                Bulk uploads also supported.\n    </p>\n        </Dragger>\n    )\n}\n\nexport default FileUpload;","/* eslint-disable no-script-url */\nimport React, { useState } from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Typography } from 'antd';\nconst originData = [];\nlet fileData = localStorage.getItem('fileData')\nlet csvColumns = fileData.split('\\n') //rows\ncsvColumns = csvColumns[0].split(',')\n\nfor (let i = 0; i < 5; i++) {\n  originData.push({\n    key: i.toString(),\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`,\n  });\n}\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst EditableTable = () => {\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originData);\n  const [editingKey, setEditingKey] = useState('');\n\n  const isEditing = (record) => record.key === editingKey;\n\n  const edit = (record) => {\n    form.setFieldsValue({\n      name: '',\n      age: '',\n      address: '',\n      ...record,\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async (key) => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex((item) => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item, ...row });\n        setData(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    }\n  };\n\n  let columns = []\n  csvColumns.forEach((header) => columns.push({\n    title: header,\n    dataIndex: header,\n    width: '25%',\n    editable: true,\n  }))\n  columns.push({\n    title: 'operation',\n    dataIndex: 'operation',\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? (\n        <span>\n          <a\n            href=\"javascript:;\"\n            onClick={() => save(record.key)}\n            style={{\n              marginRight: 8,\n            }}\n          >\n            Save\n          </a>\n          <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n            <a>Cancel</a>\n          </Popconfirm>\n        </span>\n      ) : (\n        <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\n          Edit\n        </Typography.Link>\n      );\n    },\n  });\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n  return (\n    <Form form={form} component={false}>\n      <Table\n        components={{\n          body: {\n            cell: EditableCell,\n          },\n        }}\n        bordered\n        dataSource={data}\n        columns={mergedColumns}\n        rowClassName=\"editable-row\"\n        pagination={{\n          onChange: cancel,\n        }}\n      />\n    </Form>\n  );\n};\n\nexport default EditableTable;","import React from 'react'\nimport { Transfer} from 'antd';\n\nconst mockData = [];\nlet fileData = localStorage.getItem('fileData')\nlet csvColumns = fileData.split('\\n') //rows\ncsvColumns = csvColumns[0].split(',')\n\nfor (let i = 0; i < csvColumns.length; i++) {\n  mockData.push({\n    key: csvColumns[i].toString(),\n    title: csvColumns[i],\n    description: `description`,\n    disabled: false,\n  });\n}\n\nconst oriTargetKeys = mockData.filter(item => +item.key % 3 > 1).map(item => item.key);\n\nclass SelectionTransfer extends React.Component {\n  state = {\n    targetKeys: oriTargetKeys,\n    selectedKeys: [],\n    disabled: false,\n  };\n\n  handleChange = (nextTargetKeys, direction, moveKeys) => {\n    this.setState({ targetKeys: nextTargetKeys });\n\n    console.log('targetKeys: ', nextTargetKeys);\n    console.log('direction: ', direction);\n    console.log('moveKeys: ', moveKeys);\n    localStorage.setItem('selection', nextTargetKeys.toString());\n  };\n\n  handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\n    this.setState({ selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys] });\n\n    console.log('sourceSelectedKeys: ', sourceSelectedKeys);\n    console.log('targetSelectedKeys: ', targetSelectedKeys);\n  };\n\n  handleScroll = (direction, e) => {\n    console.log('direction:', direction);\n    console.log('target:', e.target);\n  };\n\n  render() {\n    const { targetKeys, selectedKeys, disabled } = this.state;\n    return (\n      <>\n        <Transfer\n          dataSource={mockData}\n          titles={['Source', 'Target']}\n          targetKeys={targetKeys}\n          selectedKeys={selectedKeys}\n          onChange={this.handleChange}\n          onSelectChange={this.handleSelectChange}\n          onScroll={this.handleScroll}\n          render={item => item.title}\n          disabled={disabled}\n          oneWay\n          style={{ marginBottom: 30, justifyContent: 'center', marginTop: 30 }}\n          listStyle={{\n            width: 250,\n            height: 400,\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default SelectionTransfer;\n","import React from 'react'\nimport { Steps, Button, message } from 'antd';\nimport FileUpload from './FileUpload';\nimport EditableTable from './EdiTable';\nimport SelectionTransfer from './SelectionTransfer';\n\nconst { Step } = Steps;\n\nconst steps = [\n  {\n    title: 'Upload',\n    content: <FileUpload/>,\n  },\n  {\n    title: 'Select',\n    content: <SelectionTransfer />,\n  },\n  {\n    title: 'Validate',\n    content: <EditableTable />,\n  },\n];\n\n\n\nconst StepsFlow = () => {\n  const [current, setCurrent] = React.useState(0);\n\n  const next = () => {\n    setCurrent(current + 1);\n  };\n\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n\n  return (\n    <>\n      <Steps current={current}>\n        {steps.map(item => (\n          <Step key={item.title} title={item.title} />\n        ))}\n      </Steps>\n      <div className=\"steps-content\">{steps[current].content}</div>\n      <div className=\"steps-action\">\n        {current < steps.length - 1 && (\n          <Button type=\"primary\" onClick={() => next()}>\n            Next\n          </Button>\n        )}\n        {current === steps.length - 1 && (\n          <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\n            Done\n          </Button>\n        )}\n        {current > 0 && (\n          <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n            Previous\n          </Button>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default StepsFlow;","import { Layout, Menu } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport StepsFlow from './components/Steps'\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nexport default function AppLayout(props) {\n\treturn (\n\t\t<>\n\t\t\t<Layout style={{ height: \"100vh\" }}>\n\t\t\t\t<Sider\n\t\t\t\t\tbreakpoint=\"lg\"\n\t\t\t\t\tcollapsedWidth=\"0\"\n\t\t\t\t\tonBreakpoint={broken => {\n\t\t\t\t\t\tconsole.log(broken);\n\t\t\t\t\t}}\n\t\t\t\t\tonCollapse={(collapsed, type) => {\n\t\t\t\t\t\tconsole.log(collapsed, type);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"logo\" />\n\t\t\t\t\t<Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['4']}>\n\t\t\t\t\t\t<Menu.Item key=\"1\" icon={<UserOutlined />}>\n\t\t\t\t\t\t\tnav 1\n        \t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t</Sider>\n\t\t\t\t<Layout>\n\t\t\t\t\t<Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }} />\n\t\t\t\t\t<Content style={{ margin: '24px 16px 0' }}>\n\t\t\t\t\t\t<div className=\"site-layout-background\" style={{ padding: 24, minHeight: \"80vh\" }}>\n\t\t\t\t\t\t\t<StepsFlow />\n        \t\t</div>\n\t\t\t\t\t</Content>\n\t\t\t\t\t<Footer style={{ textAlign: 'center' }}>👻</Footer>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t</>\n\t);\n}","import AppLayout from './Layout'\nimport './App.css';\n\nfunction App() {\n  return (\n    <AppLayout style={{height: \"100vh\"}}/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}